name: CI

on: [push, pull_request] # on all pushes and PRs

jobs:
  mc_power:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: ["ros:melodic"]
        profile: ["f2_v2_r2"]
                #  ["f1_v1_r1", "f1_v1_r2", "f1_v1_r3",
                #  "f1_v2_r1", "f1_v2_r2", "f1_v2_r3",
                #  "f1_v3_r1", "f1_v3_r2", "f1_v3_r3",
                #  "f2_v1_r1", "f2_v1_r2", "f2_v1_r3"]
                #  "f2_v2_r1", "f2_v2_r2", "f2_v2_r3",
                #  "f2_v3_r1", "f2_v3_r2", "f2_v3_r3",
                #  "f3_v1_r1", "f3_v1_r2", "f3_v1_r3",
                #  "f3_v2_r1", "f3_v2_r2", "f3_v2_r3",
                #  "f3_v3_r1", "f3_v3_r2", "f3_v3_r3",
                #  "f1_v1_r3_k", "f1_v3_r1_k", "f2_v1_r3_k"]
        reconfiguration: ["true"]
        component: ["false"]
        obstacles: ["0"]
        power: ["0", "1.2"]
    container:
      image: ${{ matrix.distro }}
    env:
      CCACHE_DIR: "/home/runner/.ccache"
      LOG_DIR: "/github/home/metacontrol_ws/src/metacontrol_experiments/data"
      LOG_FILENAME: "log_Metacontrol_sim_"
    steps:
      - uses: actions/checkout@v2
      - name: ccache cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.distro }}-${{github.run_id}}
          restore-keys: |
            ccache-${{ matrix.distro }}
      - name: Build workspace
        run: |
          bash ./build.sh
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Run experiments
        run: |
          bash ./run_experiments.sh ${{ matrix.profile }} ${{ matrix.reconfiguration }} false ${{ matrix.obstacles }} ${{ matrix.power }}
          # Find the csv file and rename it according to the profile name
          # Assuming there is only 1 csv file
          #i=1;
          #for f in $(find ${{ env.LOG_DIR }} -name "*.csv");
          #do mv $f ${{ env.LOG_DIR }}/${{ env.LOG_FILENAME }}${{ github.run_id }}-R_${{ matrix.profile }}-${{ matrix.reconfiguration }}_$i.csv;
          #i=$((i+1));
          #done
      - name: 'Upload log artifact'
        uses: actions/upload-artifact@v2
        with:
          name: log-artifact-${{ github.run_id }}-${{ matrix.profile }}-R_${{ matrix.reconfiguration }}-${{ steps.time.outputs.time }}
          path: ${{ env.LOG_DIR }}
  
  # base_power:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       distro: ["ros:melodic"]
  #       profile: ["f1_v1_r1", "f2_v2_r2", "f3_v3_r3"]
  #               #  ["f1_v1_r1", "f1_v1_r2", "f1_v1_r3",
  #               #  "f1_v2_r1", "f1_v2_r2", "f1_v2_r3",
  #               #  "f1_v3_r1", "f1_v3_r2", "f1_v3_r3",
  #               #  "f2_v1_r1", "f2_v1_r2", "f2_v1_r3"]
  #               #  "f2_v2_r1", "f2_v2_r2", "f2_v2_r3",
  #               #  "f2_v3_r1", "f2_v3_r2", "f2_v3_r3",
  #               #  "f3_v1_r1", "f3_v1_r2", "f3_v1_r3",
  #               #  "f3_v2_r1", "f3_v2_r2", "f3_v2_r3",
  #               #  "f3_v3_r1", "f3_v3_r2", "f3_v3_r3",
  #               #  "f1_v1_r3_k", "f1_v3_r1_k", "f2_v1_r3_k"]
  #       reconfiguration: ["false"]
  #       component: ["false"]
  #       obstacles: ["0"]
  #       power: ["0", "1.2", "1.4", "1.6"]
  #   container:
  #     image: ${{ matrix.distro }}
  #   env:
  #     CCACHE_DIR: "/home/runner/.ccache"
  #     LOG_DIR: "/github/home/metacontrol_ws/src/metacontrol_experiments/data"
  #     LOG_FILENAME: "log_Metacontrol_sim_"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: ccache cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ env.CCACHE_DIR }}
  #         key: ccache-${{ matrix.distro }}-${{github.run_id}}
  #         restore-keys: |
  #           ccache-${{ matrix.distro }}
  #     - name: Build workspace
  #       run: |
  #         bash ./build.sh
  #     - name: Get Time
  #       id: time
  #       uses: nanzm/get-time-action@v1.1
  #       with:
  #         format: 'YYYY-MM-DD-HH-mm-ss'
  #     - name: Run experiments
  #       run: |
  #         bash ./run_experiments.sh ${{ matrix.profile }} ${{ matrix.reconfiguration }} false ${{ matrix.obstacles }} ${{ matrix.power }}
  #         # Find the csv file and rename it according to the profile name
  #         # Assuming there is only 1 csv file
  #         #i=1;
  #         #for f in $(find ${{ env.LOG_DIR }} -name "*.csv");
  #         #do mv $f ${{ env.LOG_DIR }}/${{ env.LOG_FILENAME }}${{ github.run_id }}-R_${{ matrix.profile }}-${{ matrix.reconfiguration }}_$i.csv;
  #         #i=$((i+1));
  #         #done
  #     - name: 'Upload log artifact'
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: log-artifact-${{ github.run_id }}-${{ matrix.profile }}-R_${{ matrix.reconfiguration }}-${{ steps.time.outputs.time }}
  #         path: ${{ env.LOG_DIR }}
  
  # mc_obstacles:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       distro: ["ros:melodic"]
  #       profile: ["f1_v1_r1", "f2_v2_r2", "f3_v3_r3"]
  #               #  ["f1_v1_r1", "f1_v1_r2", "f1_v1_r3",
  #               #  "f1_v2_r1", "f1_v2_r2", "f1_v2_r3",
  #               #  "f1_v3_r1", "f1_v3_r2", "f1_v3_r3",
  #               #  "f2_v1_r1", "f2_v1_r2", "f2_v1_r3"]
  #               #  "f2_v2_r1", "f2_v2_r2", "f2_v2_r3",
  #               #  "f2_v3_r1", "f2_v3_r2", "f2_v3_r3",
  #               #  "f3_v1_r1", "f3_v1_r2", "f3_v1_r3",
  #               #  "f3_v2_r1", "f3_v2_r2", "f3_v2_r3",
  #               #  "f3_v3_r1", "f3_v3_r2", "f3_v3_r3",
  #               #  "f1_v1_r3_k", "f1_v3_r1_k", "f2_v1_r3_k"]
  #       reconfiguration: ["true"]
  #       component: ["false"]
  #       obstacles: ["0", "1", "2", "3"]
  #       power: ["0"]
  #   container:
  #     image: ${{ matrix.distro }}
  #   env:
  #     CCACHE_DIR: "/home/runner/.ccache"
  #     LOG_DIR: "/github/home/metacontrol_ws/src/metacontrol_experiments/data"
  #     LOG_FILENAME: "log_Metacontrol_sim_"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: ccache cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ env.CCACHE_DIR }}
  #         key: ccache-${{ matrix.distro }}-${{github.run_id}}
  #         restore-keys: |
  #           ccache-${{ matrix.distro }}
  #     - name: Build workspace
  #       run: |
  #         bash ./build.sh
  #     - name: Get Time
  #       id: time
  #       uses: nanzm/get-time-action@v1.1
  #       with:
  #         format: 'YYYY-MM-DD-HH-mm-ss'
  #     - name: Run experiments
  #       run: |
  #         bash ./run_experiments.sh ${{ matrix.profile }} ${{ matrix.reconfiguration }} false ${{ matrix.obstacles }} ${{ matrix.power }}
  #         # Find the csv file and rename it according to the profile name
  #         # Assuming there is only 1 csv file
  #         #i=1;
  #         #for f in $(find ${{ env.LOG_DIR }} -name "*.csv");
  #         #do mv $f ${{ env.LOG_DIR }}/${{ env.LOG_FILENAME }}${{ github.run_id }}-R_${{ matrix.profile }}-${{ matrix.reconfiguration }}_$i.csv;
  #         #i=$((i+1));
  #         #done
  #     - name: 'Upload log artifact'
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: log-artifact-${{ github.run_id }}-${{ matrix.profile }}-R_${{ matrix.reconfiguration }}-${{ steps.time.outputs.time }}
  #         path: ${{ env.LOG_DIR }}
  
  # base_obstacles:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       distro: ["ros:melodic"]
  #       profile: ["f1_v1_r1", "f2_v2_r2", "f3_v3_r3"]
  #               #  ["f1_v1_r1", "f1_v1_r2", "f1_v1_r3",
  #               #  "f1_v2_r1", "f1_v2_r2", "f1_v2_r3",
  #               #  "f1_v3_r1", "f1_v3_r2", "f1_v3_r3",
  #               #  "f2_v1_r1", "f2_v1_r2", "f2_v1_r3"]
  #               #  "f2_v2_r1", "f2_v2_r2", "f2_v2_r3",
  #               #  "f2_v3_r1", "f2_v3_r2", "f2_v3_r3",
  #               #  "f3_v1_r1", "f3_v1_r2", "f3_v1_r3",
  #               #  "f3_v2_r1", "f3_v2_r2", "f3_v2_r3",
  #               #  "f3_v3_r1", "f3_v3_r2", "f3_v3_r3",
  #               #  "f1_v1_r3_k", "f1_v3_r1_k", "f2_v1_r3_k"]
  #       reconfiguration: ["false"]
  #       component: ["false"]
  #       obstacles: ["0", "1", "2", "3"]
  #       power: ["0"]
  #   container:
  #     image: ${{ matrix.distro }}
  #   env:
  #     CCACHE_DIR: "/home/runner/.ccache"
  #     LOG_DIR: "/github/home/metacontrol_ws/src/metacontrol_experiments/data"
  #     LOG_FILENAME: "log_Metacontrol_sim_"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: ccache cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ env.CCACHE_DIR }}
  #         key: ccache-${{ matrix.distro }}-${{github.run_id}}
  #         restore-keys: |
  #           ccache-${{ matrix.distro }}
  #     - name: Build workspace
  #       run: |
  #         bash ./build.sh
  #     - name: Get Time
  #       id: time
  #       uses: nanzm/get-time-action@v1.1
  #       with:
  #         format: 'YYYY-MM-DD-HH-mm-ss'
  #     - name: Run experiments
  #       run: |
  #         bash ./run_experiments.sh ${{ matrix.profile }} ${{ matrix.reconfiguration }} false ${{ matrix.obstacles }} ${{ matrix.power }}
  #         # Find the csv file and rename it according to the profile name
  #         # Assuming there is only 1 csv file
  #         #i=1;
  #         #for f in $(find ${{ env.LOG_DIR }} -name "*.csv");
  #         #do mv $f ${{ env.LOG_DIR }}/${{ env.LOG_FILENAME }}${{ github.run_id }}-R_${{ matrix.profile }}-${{ matrix.reconfiguration }}_$i.csv;
  #         #i=$((i+1));
  #         #done
  #     - name: 'Upload log artifact'
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: log-artifact-${{ github.run_id }}-${{ matrix.profile }}-R_${{ matrix.reconfiguration }}-${{ steps.time.outputs.time }}
  #         path: ${{ env.LOG_DIR }}

  # exp_component_error:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       distro: ["ros:melodic"]
  #       profile: ["f1_v1_r1", "f2_v2_r2", "f3_v3_r3"]
  #               #  ["f1_v1_r1", "f1_v1_r2", "f1_v1_r3",
  #               #  "f1_v2_r1", "f1_v2_r2", "f1_v2_r3",
  #               #  "f1_v3_r1", "f1_v3_r2", "f1_v3_r3",
  #               #  "f2_v1_r1", "f2_v1_r2", "f2_v1_r3"]
  #               #  "f2_v2_r1", "f2_v2_r2", "f2_v2_r3",
  #               #  "f2_v3_r1", "f2_v3_r2", "f2_v3_r3",
  #               #  "f3_v1_r1", "f3_v1_r2", "f3_v1_r3",
  #               #  "f3_v2_r1", "f3_v2_r2", "f3_v2_r3",
  #               #  "f3_v3_r1", "f3_v3_r2", "f3_v3_r3",
  #               #  "f1_v1_r3_k", "f1_v3_r1_k", "f2_v1_r3_k"]
  #       reconfiguration: ["true"]
  #       component: ["true"]
  #       obstacles: ["0"]
  #       power: ["0"]
  #   container:
  #     image: ${{ matrix.distro }}
  #   env:
  #     CCACHE_DIR: "/home/runner/.ccache"
  #     LOG_DIR: "/github/home/metacontrol_ws/src/metacontrol_experiments/data"
  #     LOG_FILENAME: "log_Metacontrol_sim_"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: ccache cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ env.CCACHE_DIR }}
  #         key: ccache-${{ matrix.distro }}-${{github.run_id}}
  #         restore-keys: |
  #           ccache-${{ matrix.distro }}
  #     - name: Build workspace
  #       run: |
  #         bash ./build.sh
  #     - name: Get Time
  #       id: time
  #       uses: nanzm/get-time-action@v1.1
  #       with:
  #         format: 'YYYY-MM-DD-HH-mm-ss'
  #     - name: Run experiments
  #       run: |
  #         bash ./run_experiments.sh ${{ matrix.profile }} ${{ matrix.reconfiguration }} true ${{ matrix.obstacles }} ${{ matrix.power }}
  #         # Find the csv file and rename it according to the profile name
  #         # Assuming there is only 1 csv file
  #         #i=1;
  #         #for f in $(find ${{ env.LOG_DIR }} -name "*.csv");
  #         #do mv $f ${{ env.LOG_DIR }}/${{ env.LOG_FILENAME }}${{ github.run_id }}-R_${{ matrix.profile }}-${{ matrix.reconfiguration }}_$i.csv;
  #         #i=$((i+1));
  #         #done
  #     - name: 'Upload log artifact'
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: log-artifact-Cerror-${{ github.run_id }}-${{ matrix.profile }}-R_${{ matrix.reconfiguration }}-${{ steps.time.outputs.time }}_Cerror
  #         path: ${{ env.LOG_DIR }}
